Terminals unused in grammar

   ERROR
   LOW
   UMINUS


Grammar

    0 $accept: moon $end

    1 moon: moon_body1 END_P

    2 moon_body1: moon_stmts1

    3 moon_stmts1: moon_stmt1
    4            | moon_stmt1 moon_stmts1

    5 moon_stmt1: declare_variable_stmt ';'
    6           | declare_type_stmt ';'
    7           | declare_function_stmt

    8 moon_body: %empty
    9          | moon_stmts

   10 moon_stmts: moon_stmt
   11           | moon_stmt moon_stmts

   12 moon_stmt: declare_variable_stmt ';'
   13          | if_stmt
   14          | while_stmt
   15          | expression ';'
   16          | return_stmt ';'
   17          | break_stmt ';'

   18 declare_variable_stmt: type IDENTIFIER
   19                      | type IDENTIFIER '=' expression

   20 struct_elem_list: type IDENTIFIER ';'
   21                 | type IDENTIFIER ';' struct_elem_list

   22 declare_type_stmt: TYPEDEF type IDENTIFIER
   23                  | STRUCT IDENTIFIER '{' struct_elem_list '}'

   24 type_fields: type_field
   25            | type_field ',' type_fields

   26 declare_function_stmt: type IDENTIFIER '(' type_fields ')' '{' moon_body '}'
   27                      | type IDENTIFIER '(' ')' '{' moon_body '}'

   28 if_stmt: IF '(' expression ')' '{' moon_body '}'
   29        | IF '(' expression ')' '{' moon_body '}' ELSE '{' moon_body '}'

   30 while_stmt: WHILE '(' expression ')' '{' moon_body '}'

   31 return_stmt: RETURN
   32            | RETURN expression

   33 break_stmt: BREAK

   34 left_value: IDENTIFIER
   35           | left_value '.' IDENTIFIER
   36           | left_value '[' expression ']'

   37 type_field: type IDENTIFIER

   38 type: IDENTIFIER
   39     | INT
   40     | STRING_
   41     | VOID
   42     | IDENTIFIER '[' ']'
   43     | INT '[' ']'

   44 expression: INTNUM
   45           | TRUE
   46           | FALSE
   47           | STRING
   48           | left_value
   49           | IDENTIFIER '(' expression_list ')'
   50           | IDENTIFIER '(' ')'
   51           | left_value '=' expression
   52           | MINUS expression
   53           | expression OR expression
   54           | expression AND expression
   55           | expression LT expression
   56           | expression GT expression
   57           | expression LE expression
   58           | expression GE expression
   59           | expression PLUS expression
   60           | expression MINUS expression
   61           | expression TIMES expression
   62           | expression DIVIDE expression
   63           | expression EQ expression
   64           | expression NEQ expression
   65           | type '{' expression_list '}'

   66 expression_list: expression
   67                | expression ',' expression_list


Terminals, with rules where they appear

$end (0) 0
'(' (40) 26 27 28 29 30 49 50
')' (41) 26 27 28 29 30 49 50
',' (44) 25 67
'.' (46) 35
';' (59) 5 6 12 15 16 17 20 21
'=' (61) 19 51
'[' (91) 36 42 43
']' (93) 36 42 43
'{' (123) 23 26 27 28 29 30 65
'}' (125) 23 26 27 28 29 30 65
error (256)
IDENTIFIER (258) 18 19 20 21 22 23 26 27 34 35 37 38 42 49 50
INTNUM (259) 44
STRING (260) 47
BREAK (261) 33
ELSE (262) 29
END_P (263) 1
ERROR (264)
FALSE (265) 46
IF (266) 28 29
INT (267) 39 43
RETURN (268) 31 32
STRING_ (269) 40
STRUCT (270) 23
TRUE (271) 45
TYPEDEF (272) 22
VOID (273) 41
WHILE (274) 30
LOW (275)
OR (276) 53
AND (277) 54
EQ (278) 63
NEQ (279) 64
LE (280) 57
LT (281) 55
GT (282) 56
GE (283) 58
PLUS (284) 59
MINUS (285) 52 60
TIMES (286) 61
DIVIDE (287) 62
UMINUS (288)


Nonterminals, with rules where they appear

$accept (44)
    on left: 0
moon (45)
    on left: 1, on right: 0
moon_body1 (46)
    on left: 2, on right: 1
moon_stmts1 (47)
    on left: 3 4, on right: 2 4
moon_stmt1 (48)
    on left: 5 6 7, on right: 3 4
moon_body (49)
    on left: 8 9, on right: 26 27 28 29 30
moon_stmts (50)
    on left: 10 11, on right: 9 11
moon_stmt (51)
    on left: 12 13 14 15 16 17, on right: 10 11
declare_variable_stmt (52)
    on left: 18 19, on right: 5 12
struct_elem_list (53)
    on left: 20 21, on right: 21 23
declare_type_stmt (54)
    on left: 22 23, on right: 6
type_fields (55)
    on left: 24 25, on right: 25 26
declare_function_stmt (56)
    on left: 26 27, on right: 7
if_stmt (57)
    on left: 28 29, on right: 13
while_stmt (58)
    on left: 30, on right: 14
return_stmt (59)
    on left: 31 32, on right: 16
break_stmt (60)
    on left: 33, on right: 17
left_value (61)
    on left: 34 35 36, on right: 35 36 48 51
type_field (62)
    on left: 37, on right: 24 25
type (63)
    on left: 38 39 40 41 42 43, on right: 18 19 20 21 22 26 27 37 65
expression (64)
    on left: 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61
    62 63 64 65, on right: 15 19 28 29 30 32 36 51 52 53 54 55 56 57
    58 59 60 61 62 63 64 66 67
expression_list (65)
    on left: 66 67, on right: 49 65 67


State 0

    0 $accept: . moon $end
    1 moon: . moon_body1 END_P
    2 moon_body1: . moon_stmts1
    3 moon_stmts1: . moon_stmt1
    4            | . moon_stmt1 moon_stmts1
    5 moon_stmt1: . declare_variable_stmt ';'
    6           | . declare_type_stmt ';'
    7           | . declare_function_stmt
   18 declare_variable_stmt: . type IDENTIFIER
   19                      | . type IDENTIFIER '=' expression
   22 declare_type_stmt: . TYPEDEF type IDENTIFIER
   23                  | . STRUCT IDENTIFIER '{' struct_elem_list '}'
   26 declare_function_stmt: . type IDENTIFIER '(' type_fields ')' '{' moon_body '}'
   27                      | . type IDENTIFIER '(' ')' '{' moon_body '}'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'

    IDENTIFIER  shift, and go to state 1
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    STRUCT      shift, and go to state 4
    TYPEDEF     shift, and go to state 5
    VOID        shift, and go to state 6

    moon                   go to state 7
    moon_body1             go to state 8
    moon_stmts1            go to state 9
    moon_stmt1             go to state 10
    declare_variable_stmt  go to state 11
    declare_type_stmt      go to state 12
    declare_function_stmt  go to state 13
    type                   go to state 14


State 1

   38 type: IDENTIFIER .  [IDENTIFIER]
   42     | IDENTIFIER . '[' ']'

    '['  shift, and go to state 15

    $default  reduce using rule 38 (type)


State 2

   39 type: INT .  [IDENTIFIER, '{']
   43     | INT . '[' ']'

    '['  shift, and go to state 16

    $default  reduce using rule 39 (type)


State 3

   40 type: STRING_ .

    $default  reduce using rule 40 (type)


State 4

   23 declare_type_stmt: STRUCT . IDENTIFIER '{' struct_elem_list '}'

    IDENTIFIER  shift, and go to state 17


State 5

   22 declare_type_stmt: TYPEDEF . type IDENTIFIER
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'

    IDENTIFIER  shift, and go to state 1
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    VOID        shift, and go to state 6

    type  go to state 18


State 6

   41 type: VOID .

    $default  reduce using rule 41 (type)


State 7

    0 $accept: moon . $end

    $end  shift, and go to state 19


State 8

    1 moon: moon_body1 . END_P

    END_P  shift, and go to state 20


State 9

    2 moon_body1: moon_stmts1 .

    $default  reduce using rule 2 (moon_body1)


State 10

    3 moon_stmts1: . moon_stmt1
    3            | moon_stmt1 .  [END_P]
    4            | . moon_stmt1 moon_stmts1
    4            | moon_stmt1 . moon_stmts1
    5 moon_stmt1: . declare_variable_stmt ';'
    6           | . declare_type_stmt ';'
    7           | . declare_function_stmt
   18 declare_variable_stmt: . type IDENTIFIER
   19                      | . type IDENTIFIER '=' expression
   22 declare_type_stmt: . TYPEDEF type IDENTIFIER
   23                  | . STRUCT IDENTIFIER '{' struct_elem_list '}'
   26 declare_function_stmt: . type IDENTIFIER '(' type_fields ')' '{' moon_body '}'
   27                      | . type IDENTIFIER '(' ')' '{' moon_body '}'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'

    IDENTIFIER  shift, and go to state 1
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    STRUCT      shift, and go to state 4
    TYPEDEF     shift, and go to state 5
    VOID        shift, and go to state 6

    $default  reduce using rule 3 (moon_stmts1)

    moon_stmts1            go to state 21
    moon_stmt1             go to state 10
    declare_variable_stmt  go to state 11
    declare_type_stmt      go to state 12
    declare_function_stmt  go to state 13
    type                   go to state 14


State 11

    5 moon_stmt1: declare_variable_stmt . ';'

    ';'  shift, and go to state 22


State 12

    6 moon_stmt1: declare_type_stmt . ';'

    ';'  shift, and go to state 23


State 13

    7 moon_stmt1: declare_function_stmt .

    $default  reduce using rule 7 (moon_stmt1)


State 14

   18 declare_variable_stmt: type . IDENTIFIER
   19                      | type . IDENTIFIER '=' expression
   26 declare_function_stmt: type . IDENTIFIER '(' type_fields ')' '{' moon_body '}'
   27                      | type . IDENTIFIER '(' ')' '{' moon_body '}'

    IDENTIFIER  shift, and go to state 24


State 15

   42 type: IDENTIFIER '[' . ']'

    ']'  shift, and go to state 25


State 16

   43 type: INT '[' . ']'

    ']'  shift, and go to state 26


State 17

   23 declare_type_stmt: STRUCT IDENTIFIER . '{' struct_elem_list '}'

    '{'  shift, and go to state 27


State 18

   22 declare_type_stmt: TYPEDEF type . IDENTIFIER

    IDENTIFIER  shift, and go to state 28


State 19

    0 $accept: moon $end .

    $default  accept


State 20

    1 moon: moon_body1 END_P .

    $default  reduce using rule 1 (moon)


State 21

    4 moon_stmts1: moon_stmt1 moon_stmts1 .

    $default  reduce using rule 4 (moon_stmts1)


State 22

    5 moon_stmt1: declare_variable_stmt ';' .

    $default  reduce using rule 5 (moon_stmt1)


State 23

    6 moon_stmt1: declare_type_stmt ';' .

    $default  reduce using rule 6 (moon_stmt1)


State 24

   18 declare_variable_stmt: type IDENTIFIER .  [';']
   19                      | type IDENTIFIER . '=' expression
   26 declare_function_stmt: type IDENTIFIER . '(' type_fields ')' '{' moon_body '}'
   27                      | type IDENTIFIER . '(' ')' '{' moon_body '}'

    '='  shift, and go to state 29
    '('  shift, and go to state 30

    $default  reduce using rule 18 (declare_variable_stmt)


State 25

   42 type: IDENTIFIER '[' ']' .

    $default  reduce using rule 42 (type)


State 26

   43 type: INT '[' ']' .

    $default  reduce using rule 43 (type)


State 27

   20 struct_elem_list: . type IDENTIFIER ';'
   21                 | . type IDENTIFIER ';' struct_elem_list
   23 declare_type_stmt: STRUCT IDENTIFIER '{' . struct_elem_list '}'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'

    IDENTIFIER  shift, and go to state 1
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    VOID        shift, and go to state 6

    struct_elem_list  go to state 31
    type              go to state 32


State 28

   22 declare_type_stmt: TYPEDEF type IDENTIFIER .

    $default  reduce using rule 22 (declare_type_stmt)


State 29

   19 declare_variable_stmt: type IDENTIFIER '=' . expression
   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    left_value  go to state 39
    type        go to state 40
    expression  go to state 41


State 30

   24 type_fields: . type_field
   25            | . type_field ',' type_fields
   26 declare_function_stmt: type IDENTIFIER '(' . type_fields ')' '{' moon_body '}'
   27                      | type IDENTIFIER '(' . ')' '{' moon_body '}'
   37 type_field: . type IDENTIFIER
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'

    IDENTIFIER  shift, and go to state 1
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    VOID        shift, and go to state 6
    ')'         shift, and go to state 42

    type_fields  go to state 43
    type_field   go to state 44
    type         go to state 45


State 31

   23 declare_type_stmt: STRUCT IDENTIFIER '{' struct_elem_list . '}'

    '}'  shift, and go to state 46


State 32

   20 struct_elem_list: type . IDENTIFIER ';'
   21                 | type . IDENTIFIER ';' struct_elem_list

    IDENTIFIER  shift, and go to state 47


State 33

   34 left_value: IDENTIFIER .  ['[', '=', OR, AND, EQ, NEQ, LE, LT, GT, GE, PLUS, MINUS, TIMES, DIVIDE, ';', '}', ',', ')', '.', ']']
   38 type: IDENTIFIER .  [IDENTIFIER, '{']
   42     | IDENTIFIER . '[' ']'
   49 expression: IDENTIFIER . '(' expression_list ')'
   50           | IDENTIFIER . '(' ')'

    '('  shift, and go to state 48

    IDENTIFIER  reduce using rule 38 (type)
    '{'         reduce using rule 38 (type)
    $default    reduce using rule 34 (left_value)

    Conflict between rule 34 and token '[' resolved as reduce ('[' < MINUS).


State 34

   44 expression: INTNUM .

    $default  reduce using rule 44 (expression)


State 35

   47 expression: STRING .

    $default  reduce using rule 47 (expression)


State 36

   46 expression: FALSE .

    $default  reduce using rule 46 (expression)


State 37

   45 expression: TRUE .

    $default  reduce using rule 45 (expression)


State 38

   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   52           | MINUS . expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    left_value  go to state 39
    type        go to state 40
    expression  go to state 49


State 39

   35 left_value: left_value . '.' IDENTIFIER
   36           | left_value . '[' expression ']'
   48 expression: left_value .  [OR, AND, EQ, NEQ, LE, LT, GT, GE, PLUS, MINUS, TIMES, DIVIDE, ';', '}', ',', ')', ']']
   51           | left_value . '=' expression

    '['  shift, and go to state 50
    '='  shift, and go to state 51
    '.'  shift, and go to state 52

    $default  reduce using rule 48 (expression)


State 40

   65 expression: type . '{' expression_list '}'

    '{'  shift, and go to state 53


State 41

   19 declare_variable_stmt: type IDENTIFIER '=' expression .  [';']
   53 expression: expression . OR expression
   54           | expression . AND expression
   55           | expression . LT expression
   56           | expression . GT expression
   57           | expression . LE expression
   58           | expression . GE expression
   59           | expression . PLUS expression
   60           | expression . MINUS expression
   61           | expression . TIMES expression
   62           | expression . DIVIDE expression
   63           | expression . EQ expression
   64           | expression . NEQ expression

    OR      shift, and go to state 54
    AND     shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LE      shift, and go to state 58
    LT      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    PLUS    shift, and go to state 62
    MINUS   shift, and go to state 63
    TIMES   shift, and go to state 64
    DIVIDE  shift, and go to state 65

    $default  reduce using rule 19 (declare_variable_stmt)


State 42

   27 declare_function_stmt: type IDENTIFIER '(' ')' . '{' moon_body '}'

    '{'  shift, and go to state 66


State 43

   26 declare_function_stmt: type IDENTIFIER '(' type_fields . ')' '{' moon_body '}'

    ')'  shift, and go to state 67


State 44

   24 type_fields: type_field .  [')']
   25            | type_field . ',' type_fields

    ','  shift, and go to state 68

    $default  reduce using rule 24 (type_fields)


State 45

   37 type_field: type . IDENTIFIER

    IDENTIFIER  shift, and go to state 69


State 46

   23 declare_type_stmt: STRUCT IDENTIFIER '{' struct_elem_list '}' .

    $default  reduce using rule 23 (declare_type_stmt)


State 47

   20 struct_elem_list: type IDENTIFIER . ';'
   21                 | type IDENTIFIER . ';' struct_elem_list

    ';'  shift, and go to state 70


State 48

   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   49           | IDENTIFIER '(' . expression_list ')'
   50           | . IDENTIFIER '(' ')'
   50           | IDENTIFIER '(' . ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'
   66 expression_list: . expression
   67                | . expression ',' expression_list

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38
    ')'         shift, and go to state 71

    left_value       go to state 39
    type             go to state 40
    expression       go to state 72
    expression_list  go to state 73


State 49

   52 expression: MINUS expression .  [OR, AND, EQ, NEQ, LE, LT, GT, GE, PLUS, MINUS, ';', '}', ',', ')', ']']
   53           | expression . OR expression
   54           | expression . AND expression
   55           | expression . LT expression
   56           | expression . GT expression
   57           | expression . LE expression
   58           | expression . GE expression
   59           | expression . PLUS expression
   60           | expression . MINUS expression
   61           | expression . TIMES expression
   62           | expression . DIVIDE expression
   63           | expression . EQ expression
   64           | expression . NEQ expression

    TIMES   shift, and go to state 64
    DIVIDE  shift, and go to state 65

    $default  reduce using rule 52 (expression)

    Conflict between rule 52 and token OR resolved as reduce (OR < MINUS).
    Conflict between rule 52 and token AND resolved as reduce (AND < MINUS).
    Conflict between rule 52 and token EQ resolved as reduce (EQ < MINUS).
    Conflict between rule 52 and token NEQ resolved as reduce (NEQ < MINUS).
    Conflict between rule 52 and token LE resolved as reduce (LE < MINUS).
    Conflict between rule 52 and token LT resolved as reduce (LT < MINUS).
    Conflict between rule 52 and token GT resolved as reduce (GT < MINUS).
    Conflict between rule 52 and token GE resolved as reduce (GE < MINUS).
    Conflict between rule 52 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 52 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 52 and token TIMES resolved as shift (MINUS < TIMES).
    Conflict between rule 52 and token DIVIDE resolved as shift (MINUS < DIVIDE).


State 50

   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   36           | left_value '[' . expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    left_value  go to state 39
    type        go to state 40
    expression  go to state 74


State 51

   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   51           | left_value '=' . expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    left_value  go to state 39
    type        go to state 40
    expression  go to state 75


State 52

   35 left_value: left_value '.' . IDENTIFIER

    IDENTIFIER  shift, and go to state 76


State 53

   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'
   65           | type '{' . expression_list '}'
   66 expression_list: . expression
   67                | . expression ',' expression_list

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    left_value       go to state 39
    type             go to state 40
    expression       go to state 72
    expression_list  go to state 77


State 54

   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   53           | expression OR . expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    left_value  go to state 39
    type        go to state 40
    expression  go to state 78


State 55

   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   54           | expression AND . expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    left_value  go to state 39
    type        go to state 40
    expression  go to state 79


State 56

   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   63           | expression EQ . expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    left_value  go to state 39
    type        go to state 40
    expression  go to state 80


State 57

   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   64           | expression NEQ . expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    left_value  go to state 39
    type        go to state 40
    expression  go to state 81


State 58

   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   57           | expression LE . expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    left_value  go to state 39
    type        go to state 40
    expression  go to state 82


State 59

   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   55           | expression LT . expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    left_value  go to state 39
    type        go to state 40
    expression  go to state 83


State 60

   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   56           | expression GT . expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    left_value  go to state 39
    type        go to state 40
    expression  go to state 84


State 61

   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   58           | expression GE . expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    left_value  go to state 39
    type        go to state 40
    expression  go to state 85


State 62

   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   59           | expression PLUS . expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    left_value  go to state 39
    type        go to state 40
    expression  go to state 86


State 63

   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   60           | expression MINUS . expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    left_value  go to state 39
    type        go to state 40
    expression  go to state 87


State 64

   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   61           | expression TIMES . expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    left_value  go to state 39
    type        go to state 40
    expression  go to state 88


State 65

   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   62           | expression DIVIDE . expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    left_value  go to state 39
    type        go to state 40
    expression  go to state 89


State 66

    8 moon_body: . %empty  ['}']
    9          | . moon_stmts
   10 moon_stmts: . moon_stmt
   11           | . moon_stmt moon_stmts
   12 moon_stmt: . declare_variable_stmt ';'
   13          | . if_stmt
   14          | . while_stmt
   15          | . expression ';'
   16          | . return_stmt ';'
   17          | . break_stmt ';'
   18 declare_variable_stmt: . type IDENTIFIER
   19                      | . type IDENTIFIER '=' expression
   27 declare_function_stmt: type IDENTIFIER '(' ')' '{' . moon_body '}'
   28 if_stmt: . IF '(' expression ')' '{' moon_body '}'
   29        | . IF '(' expression ')' '{' moon_body '}' ELSE '{' moon_body '}'
   30 while_stmt: . WHILE '(' expression ')' '{' moon_body '}'
   31 return_stmt: . RETURN
   32            | . RETURN expression
   33 break_stmt: . BREAK
   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    BREAK       shift, and go to state 90
    FALSE       shift, and go to state 36
    IF          shift, and go to state 91
    INT         shift, and go to state 2
    RETURN      shift, and go to state 92
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    WHILE       shift, and go to state 93
    MINUS       shift, and go to state 38

    $default  reduce using rule 8 (moon_body)

    moon_body              go to state 94
    moon_stmts             go to state 95
    moon_stmt              go to state 96
    declare_variable_stmt  go to state 97
    if_stmt                go to state 98
    while_stmt             go to state 99
    return_stmt            go to state 100
    break_stmt             go to state 101
    left_value             go to state 39
    type                   go to state 102
    expression             go to state 103


State 67

   26 declare_function_stmt: type IDENTIFIER '(' type_fields ')' . '{' moon_body '}'

    '{'  shift, and go to state 104


State 68

   24 type_fields: . type_field
   25            | . type_field ',' type_fields
   25            | type_field ',' . type_fields
   37 type_field: . type IDENTIFIER
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'

    IDENTIFIER  shift, and go to state 1
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    VOID        shift, and go to state 6

    type_fields  go to state 105
    type_field   go to state 44
    type         go to state 45


State 69

   37 type_field: type IDENTIFIER .

    $default  reduce using rule 37 (type_field)


State 70

   20 struct_elem_list: . type IDENTIFIER ';'
   20                 | type IDENTIFIER ';' .  ['}']
   21                 | . type IDENTIFIER ';' struct_elem_list
   21                 | type IDENTIFIER ';' . struct_elem_list
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'

    IDENTIFIER  shift, and go to state 1
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    VOID        shift, and go to state 6

    $default  reduce using rule 20 (struct_elem_list)

    struct_elem_list  go to state 106
    type              go to state 32


State 71

   50 expression: IDENTIFIER '(' ')' .

    $default  reduce using rule 50 (expression)


State 72

   53 expression: expression . OR expression
   54           | expression . AND expression
   55           | expression . LT expression
   56           | expression . GT expression
   57           | expression . LE expression
   58           | expression . GE expression
   59           | expression . PLUS expression
   60           | expression . MINUS expression
   61           | expression . TIMES expression
   62           | expression . DIVIDE expression
   63           | expression . EQ expression
   64           | expression . NEQ expression
   66 expression_list: expression .  ['}', ')']
   67                | expression . ',' expression_list

    OR      shift, and go to state 54
    AND     shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LE      shift, and go to state 58
    LT      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    PLUS    shift, and go to state 62
    MINUS   shift, and go to state 63
    TIMES   shift, and go to state 64
    DIVIDE  shift, and go to state 65
    ','     shift, and go to state 107

    $default  reduce using rule 66 (expression_list)


State 73

   49 expression: IDENTIFIER '(' expression_list . ')'

    ')'  shift, and go to state 108


State 74

   36 left_value: left_value '[' expression . ']'
   53 expression: expression . OR expression
   54           | expression . AND expression
   55           | expression . LT expression
   56           | expression . GT expression
   57           | expression . LE expression
   58           | expression . GE expression
   59           | expression . PLUS expression
   60           | expression . MINUS expression
   61           | expression . TIMES expression
   62           | expression . DIVIDE expression
   63           | expression . EQ expression
   64           | expression . NEQ expression

    OR      shift, and go to state 54
    AND     shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LE      shift, and go to state 58
    LT      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    PLUS    shift, and go to state 62
    MINUS   shift, and go to state 63
    TIMES   shift, and go to state 64
    DIVIDE  shift, and go to state 65
    ']'     shift, and go to state 109


State 75

   51 expression: left_value '=' expression .  [';', '}', ',', ')', ']']
   53           | expression . OR expression
   54           | expression . AND expression
   55           | expression . LT expression
   56           | expression . GT expression
   57           | expression . LE expression
   58           | expression . GE expression
   59           | expression . PLUS expression
   60           | expression . MINUS expression
   61           | expression . TIMES expression
   62           | expression . DIVIDE expression
   63           | expression . EQ expression
   64           | expression . NEQ expression

    OR      shift, and go to state 54
    AND     shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LE      shift, and go to state 58
    LT      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    PLUS    shift, and go to state 62
    MINUS   shift, and go to state 63
    TIMES   shift, and go to state 64
    DIVIDE  shift, and go to state 65

    $default  reduce using rule 51 (expression)

    Conflict between rule 51 and token OR resolved as shift ('=' < OR).
    Conflict between rule 51 and token AND resolved as shift ('=' < AND).
    Conflict between rule 51 and token EQ resolved as shift ('=' < EQ).
    Conflict between rule 51 and token NEQ resolved as shift ('=' < NEQ).
    Conflict between rule 51 and token LE resolved as shift ('=' < LE).
    Conflict between rule 51 and token LT resolved as shift ('=' < LT).
    Conflict between rule 51 and token GT resolved as shift ('=' < GT).
    Conflict between rule 51 and token GE resolved as shift ('=' < GE).
    Conflict between rule 51 and token PLUS resolved as shift ('=' < PLUS).
    Conflict between rule 51 and token MINUS resolved as shift ('=' < MINUS).
    Conflict between rule 51 and token TIMES resolved as shift ('=' < TIMES).
    Conflict between rule 51 and token DIVIDE resolved as shift ('=' < DIVIDE).


State 76

   35 left_value: left_value '.' IDENTIFIER .

    $default  reduce using rule 35 (left_value)


State 77

   65 expression: type '{' expression_list . '}'

    '}'  shift, and go to state 110


State 78

   53 expression: expression . OR expression
   53           | expression OR expression .  [OR, ';', '}', ',', ')', ']']
   54           | expression . AND expression
   55           | expression . LT expression
   56           | expression . GT expression
   57           | expression . LE expression
   58           | expression . GE expression
   59           | expression . PLUS expression
   60           | expression . MINUS expression
   61           | expression . TIMES expression
   62           | expression . DIVIDE expression
   63           | expression . EQ expression
   64           | expression . NEQ expression

    AND     shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LE      shift, and go to state 58
    LT      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    PLUS    shift, and go to state 62
    MINUS   shift, and go to state 63
    TIMES   shift, and go to state 64
    DIVIDE  shift, and go to state 65

    $default  reduce using rule 53 (expression)

    Conflict between rule 53 and token OR resolved as reduce (%left OR).
    Conflict between rule 53 and token AND resolved as shift (OR < AND).
    Conflict between rule 53 and token EQ resolved as shift (OR < EQ).
    Conflict between rule 53 and token NEQ resolved as shift (OR < NEQ).
    Conflict between rule 53 and token LE resolved as shift (OR < LE).
    Conflict between rule 53 and token LT resolved as shift (OR < LT).
    Conflict between rule 53 and token GT resolved as shift (OR < GT).
    Conflict between rule 53 and token GE resolved as shift (OR < GE).
    Conflict between rule 53 and token PLUS resolved as shift (OR < PLUS).
    Conflict between rule 53 and token MINUS resolved as shift (OR < MINUS).
    Conflict between rule 53 and token TIMES resolved as shift (OR < TIMES).
    Conflict between rule 53 and token DIVIDE resolved as shift (OR < DIVIDE).


State 79

   53 expression: expression . OR expression
   54           | expression . AND expression
   54           | expression AND expression .  [OR, AND, ';', '}', ',', ')', ']']
   55           | expression . LT expression
   56           | expression . GT expression
   57           | expression . LE expression
   58           | expression . GE expression
   59           | expression . PLUS expression
   60           | expression . MINUS expression
   61           | expression . TIMES expression
   62           | expression . DIVIDE expression
   63           | expression . EQ expression
   64           | expression . NEQ expression

    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LE      shift, and go to state 58
    LT      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    PLUS    shift, and go to state 62
    MINUS   shift, and go to state 63
    TIMES   shift, and go to state 64
    DIVIDE  shift, and go to state 65

    $default  reduce using rule 54 (expression)

    Conflict between rule 54 and token OR resolved as reduce (OR < AND).
    Conflict between rule 54 and token AND resolved as reduce (%left AND).
    Conflict between rule 54 and token EQ resolved as shift (AND < EQ).
    Conflict between rule 54 and token NEQ resolved as shift (AND < NEQ).
    Conflict between rule 54 and token LE resolved as shift (AND < LE).
    Conflict between rule 54 and token LT resolved as shift (AND < LT).
    Conflict between rule 54 and token GT resolved as shift (AND < GT).
    Conflict between rule 54 and token GE resolved as shift (AND < GE).
    Conflict between rule 54 and token PLUS resolved as shift (AND < PLUS).
    Conflict between rule 54 and token MINUS resolved as shift (AND < MINUS).
    Conflict between rule 54 and token TIMES resolved as shift (AND < TIMES).
    Conflict between rule 54 and token DIVIDE resolved as shift (AND < DIVIDE).


State 80

   53 expression: expression . OR expression
   54           | expression . AND expression
   55           | expression . LT expression
   56           | expression . GT expression
   57           | expression . LE expression
   58           | expression . GE expression
   59           | expression . PLUS expression
   60           | expression . MINUS expression
   61           | expression . TIMES expression
   62           | expression . DIVIDE expression
   63           | expression . EQ expression
   63           | expression EQ expression .  [OR, AND, ';', '}', ',', ')', ']']
   64           | expression . NEQ expression

    PLUS    shift, and go to state 62
    MINUS   shift, and go to state 63
    TIMES   shift, and go to state 64
    DIVIDE  shift, and go to state 65

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 63 (expression)

    Conflict between rule 63 and token OR resolved as reduce (OR < EQ).
    Conflict between rule 63 and token AND resolved as reduce (AND < EQ).
    Conflict between rule 63 and token EQ resolved as an error (%nonassoc EQ).
    Conflict between rule 63 and token NEQ resolved as an error (%nonassoc NEQ).
    Conflict between rule 63 and token LE resolved as an error (%nonassoc LE).
    Conflict between rule 63 and token LT resolved as an error (%nonassoc LT).
    Conflict between rule 63 and token GT resolved as an error (%nonassoc GT).
    Conflict between rule 63 and token GE resolved as an error (%nonassoc GE).
    Conflict between rule 63 and token PLUS resolved as shift (EQ < PLUS).
    Conflict between rule 63 and token MINUS resolved as shift (EQ < MINUS).
    Conflict between rule 63 and token TIMES resolved as shift (EQ < TIMES).
    Conflict between rule 63 and token DIVIDE resolved as shift (EQ < DIVIDE).


State 81

   53 expression: expression . OR expression
   54           | expression . AND expression
   55           | expression . LT expression
   56           | expression . GT expression
   57           | expression . LE expression
   58           | expression . GE expression
   59           | expression . PLUS expression
   60           | expression . MINUS expression
   61           | expression . TIMES expression
   62           | expression . DIVIDE expression
   63           | expression . EQ expression
   64           | expression . NEQ expression
   64           | expression NEQ expression .  [OR, AND, ';', '}', ',', ')', ']']

    PLUS    shift, and go to state 62
    MINUS   shift, and go to state 63
    TIMES   shift, and go to state 64
    DIVIDE  shift, and go to state 65

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 64 (expression)

    Conflict between rule 64 and token OR resolved as reduce (OR < NEQ).
    Conflict between rule 64 and token AND resolved as reduce (AND < NEQ).
    Conflict between rule 64 and token EQ resolved as an error (%nonassoc EQ).
    Conflict between rule 64 and token NEQ resolved as an error (%nonassoc NEQ).
    Conflict between rule 64 and token LE resolved as an error (%nonassoc LE).
    Conflict between rule 64 and token LT resolved as an error (%nonassoc LT).
    Conflict between rule 64 and token GT resolved as an error (%nonassoc GT).
    Conflict between rule 64 and token GE resolved as an error (%nonassoc GE).
    Conflict between rule 64 and token PLUS resolved as shift (NEQ < PLUS).
    Conflict between rule 64 and token MINUS resolved as shift (NEQ < MINUS).
    Conflict between rule 64 and token TIMES resolved as shift (NEQ < TIMES).
    Conflict between rule 64 and token DIVIDE resolved as shift (NEQ < DIVIDE).


State 82

   53 expression: expression . OR expression
   54           | expression . AND expression
   55           | expression . LT expression
   56           | expression . GT expression
   57           | expression . LE expression
   57           | expression LE expression .  [OR, AND, ';', '}', ',', ')', ']']
   58           | expression . GE expression
   59           | expression . PLUS expression
   60           | expression . MINUS expression
   61           | expression . TIMES expression
   62           | expression . DIVIDE expression
   63           | expression . EQ expression
   64           | expression . NEQ expression

    PLUS    shift, and go to state 62
    MINUS   shift, and go to state 63
    TIMES   shift, and go to state 64
    DIVIDE  shift, and go to state 65

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 57 (expression)

    Conflict between rule 57 and token OR resolved as reduce (OR < LE).
    Conflict between rule 57 and token AND resolved as reduce (AND < LE).
    Conflict between rule 57 and token EQ resolved as an error (%nonassoc EQ).
    Conflict between rule 57 and token NEQ resolved as an error (%nonassoc NEQ).
    Conflict between rule 57 and token LE resolved as an error (%nonassoc LE).
    Conflict between rule 57 and token LT resolved as an error (%nonassoc LT).
    Conflict between rule 57 and token GT resolved as an error (%nonassoc GT).
    Conflict between rule 57 and token GE resolved as an error (%nonassoc GE).
    Conflict between rule 57 and token PLUS resolved as shift (LE < PLUS).
    Conflict between rule 57 and token MINUS resolved as shift (LE < MINUS).
    Conflict between rule 57 and token TIMES resolved as shift (LE < TIMES).
    Conflict between rule 57 and token DIVIDE resolved as shift (LE < DIVIDE).


State 83

   53 expression: expression . OR expression
   54           | expression . AND expression
   55           | expression . LT expression
   55           | expression LT expression .  [OR, AND, ';', '}', ',', ')', ']']
   56           | expression . GT expression
   57           | expression . LE expression
   58           | expression . GE expression
   59           | expression . PLUS expression
   60           | expression . MINUS expression
   61           | expression . TIMES expression
   62           | expression . DIVIDE expression
   63           | expression . EQ expression
   64           | expression . NEQ expression

    PLUS    shift, and go to state 62
    MINUS   shift, and go to state 63
    TIMES   shift, and go to state 64
    DIVIDE  shift, and go to state 65

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 55 (expression)

    Conflict between rule 55 and token OR resolved as reduce (OR < LT).
    Conflict between rule 55 and token AND resolved as reduce (AND < LT).
    Conflict between rule 55 and token EQ resolved as an error (%nonassoc EQ).
    Conflict between rule 55 and token NEQ resolved as an error (%nonassoc NEQ).
    Conflict between rule 55 and token LE resolved as an error (%nonassoc LE).
    Conflict between rule 55 and token LT resolved as an error (%nonassoc LT).
    Conflict between rule 55 and token GT resolved as an error (%nonassoc GT).
    Conflict between rule 55 and token GE resolved as an error (%nonassoc GE).
    Conflict between rule 55 and token PLUS resolved as shift (LT < PLUS).
    Conflict between rule 55 and token MINUS resolved as shift (LT < MINUS).
    Conflict between rule 55 and token TIMES resolved as shift (LT < TIMES).
    Conflict between rule 55 and token DIVIDE resolved as shift (LT < DIVIDE).


State 84

   53 expression: expression . OR expression
   54           | expression . AND expression
   55           | expression . LT expression
   56           | expression . GT expression
   56           | expression GT expression .  [OR, AND, ';', '}', ',', ')', ']']
   57           | expression . LE expression
   58           | expression . GE expression
   59           | expression . PLUS expression
   60           | expression . MINUS expression
   61           | expression . TIMES expression
   62           | expression . DIVIDE expression
   63           | expression . EQ expression
   64           | expression . NEQ expression

    PLUS    shift, and go to state 62
    MINUS   shift, and go to state 63
    TIMES   shift, and go to state 64
    DIVIDE  shift, and go to state 65

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 56 (expression)

    Conflict between rule 56 and token OR resolved as reduce (OR < GT).
    Conflict between rule 56 and token AND resolved as reduce (AND < GT).
    Conflict between rule 56 and token EQ resolved as an error (%nonassoc EQ).
    Conflict between rule 56 and token NEQ resolved as an error (%nonassoc NEQ).
    Conflict between rule 56 and token LE resolved as an error (%nonassoc LE).
    Conflict between rule 56 and token LT resolved as an error (%nonassoc LT).
    Conflict between rule 56 and token GT resolved as an error (%nonassoc GT).
    Conflict between rule 56 and token GE resolved as an error (%nonassoc GE).
    Conflict between rule 56 and token PLUS resolved as shift (GT < PLUS).
    Conflict between rule 56 and token MINUS resolved as shift (GT < MINUS).
    Conflict between rule 56 and token TIMES resolved as shift (GT < TIMES).
    Conflict between rule 56 and token DIVIDE resolved as shift (GT < DIVIDE).


State 85

   53 expression: expression . OR expression
   54           | expression . AND expression
   55           | expression . LT expression
   56           | expression . GT expression
   57           | expression . LE expression
   58           | expression . GE expression
   58           | expression GE expression .  [OR, AND, ';', '}', ',', ')', ']']
   59           | expression . PLUS expression
   60           | expression . MINUS expression
   61           | expression . TIMES expression
   62           | expression . DIVIDE expression
   63           | expression . EQ expression
   64           | expression . NEQ expression

    PLUS    shift, and go to state 62
    MINUS   shift, and go to state 63
    TIMES   shift, and go to state 64
    DIVIDE  shift, and go to state 65

    EQ   error (nonassociative)
    NEQ  error (nonassociative)
    LE   error (nonassociative)
    LT   error (nonassociative)
    GT   error (nonassociative)
    GE   error (nonassociative)

    $default  reduce using rule 58 (expression)

    Conflict between rule 58 and token OR resolved as reduce (OR < GE).
    Conflict between rule 58 and token AND resolved as reduce (AND < GE).
    Conflict between rule 58 and token EQ resolved as an error (%nonassoc EQ).
    Conflict between rule 58 and token NEQ resolved as an error (%nonassoc NEQ).
    Conflict between rule 58 and token LE resolved as an error (%nonassoc LE).
    Conflict between rule 58 and token LT resolved as an error (%nonassoc LT).
    Conflict between rule 58 and token GT resolved as an error (%nonassoc GT).
    Conflict between rule 58 and token GE resolved as an error (%nonassoc GE).
    Conflict between rule 58 and token PLUS resolved as shift (GE < PLUS).
    Conflict between rule 58 and token MINUS resolved as shift (GE < MINUS).
    Conflict between rule 58 and token TIMES resolved as shift (GE < TIMES).
    Conflict between rule 58 and token DIVIDE resolved as shift (GE < DIVIDE).


State 86

   53 expression: expression . OR expression
   54           | expression . AND expression
   55           | expression . LT expression
   56           | expression . GT expression
   57           | expression . LE expression
   58           | expression . GE expression
   59           | expression . PLUS expression
   59           | expression PLUS expression .  [OR, AND, EQ, NEQ, LE, LT, GT, GE, PLUS, MINUS, ';', '}', ',', ')', ']']
   60           | expression . MINUS expression
   61           | expression . TIMES expression
   62           | expression . DIVIDE expression
   63           | expression . EQ expression
   64           | expression . NEQ expression

    TIMES   shift, and go to state 64
    DIVIDE  shift, and go to state 65

    $default  reduce using rule 59 (expression)

    Conflict between rule 59 and token OR resolved as reduce (OR < PLUS).
    Conflict between rule 59 and token AND resolved as reduce (AND < PLUS).
    Conflict between rule 59 and token EQ resolved as reduce (EQ < PLUS).
    Conflict between rule 59 and token NEQ resolved as reduce (NEQ < PLUS).
    Conflict between rule 59 and token LE resolved as reduce (LE < PLUS).
    Conflict between rule 59 and token LT resolved as reduce (LT < PLUS).
    Conflict between rule 59 and token GT resolved as reduce (GT < PLUS).
    Conflict between rule 59 and token GE resolved as reduce (GE < PLUS).
    Conflict between rule 59 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 59 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 59 and token TIMES resolved as shift (PLUS < TIMES).
    Conflict between rule 59 and token DIVIDE resolved as shift (PLUS < DIVIDE).


State 87

   53 expression: expression . OR expression
   54           | expression . AND expression
   55           | expression . LT expression
   56           | expression . GT expression
   57           | expression . LE expression
   58           | expression . GE expression
   59           | expression . PLUS expression
   60           | expression . MINUS expression
   60           | expression MINUS expression .  [OR, AND, EQ, NEQ, LE, LT, GT, GE, PLUS, MINUS, ';', '}', ',', ')', ']']
   61           | expression . TIMES expression
   62           | expression . DIVIDE expression
   63           | expression . EQ expression
   64           | expression . NEQ expression

    TIMES   shift, and go to state 64
    DIVIDE  shift, and go to state 65

    $default  reduce using rule 60 (expression)

    Conflict between rule 60 and token OR resolved as reduce (OR < MINUS).
    Conflict between rule 60 and token AND resolved as reduce (AND < MINUS).
    Conflict between rule 60 and token EQ resolved as reduce (EQ < MINUS).
    Conflict between rule 60 and token NEQ resolved as reduce (NEQ < MINUS).
    Conflict between rule 60 and token LE resolved as reduce (LE < MINUS).
    Conflict between rule 60 and token LT resolved as reduce (LT < MINUS).
    Conflict between rule 60 and token GT resolved as reduce (GT < MINUS).
    Conflict between rule 60 and token GE resolved as reduce (GE < MINUS).
    Conflict between rule 60 and token PLUS resolved as reduce (%left PLUS).
    Conflict between rule 60 and token MINUS resolved as reduce (%left MINUS).
    Conflict between rule 60 and token TIMES resolved as shift (MINUS < TIMES).
    Conflict between rule 60 and token DIVIDE resolved as shift (MINUS < DIVIDE).


State 88

   53 expression: expression . OR expression
   54           | expression . AND expression
   55           | expression . LT expression
   56           | expression . GT expression
   57           | expression . LE expression
   58           | expression . GE expression
   59           | expression . PLUS expression
   60           | expression . MINUS expression
   61           | expression . TIMES expression
   61           | expression TIMES expression .  [OR, AND, EQ, NEQ, LE, LT, GT, GE, PLUS, MINUS, TIMES, DIVIDE, ';', '}', ',', ')', ']']
   62           | expression . DIVIDE expression
   63           | expression . EQ expression
   64           | expression . NEQ expression

    $default  reduce using rule 61 (expression)

    Conflict between rule 61 and token OR resolved as reduce (OR < TIMES).
    Conflict between rule 61 and token AND resolved as reduce (AND < TIMES).
    Conflict between rule 61 and token EQ resolved as reduce (EQ < TIMES).
    Conflict between rule 61 and token NEQ resolved as reduce (NEQ < TIMES).
    Conflict between rule 61 and token LE resolved as reduce (LE < TIMES).
    Conflict between rule 61 and token LT resolved as reduce (LT < TIMES).
    Conflict between rule 61 and token GT resolved as reduce (GT < TIMES).
    Conflict between rule 61 and token GE resolved as reduce (GE < TIMES).
    Conflict between rule 61 and token PLUS resolved as reduce (PLUS < TIMES).
    Conflict between rule 61 and token MINUS resolved as reduce (MINUS < TIMES).
    Conflict between rule 61 and token TIMES resolved as reduce (%left TIMES).
    Conflict between rule 61 and token DIVIDE resolved as reduce (%left DIVIDE).


State 89

   53 expression: expression . OR expression
   54           | expression . AND expression
   55           | expression . LT expression
   56           | expression . GT expression
   57           | expression . LE expression
   58           | expression . GE expression
   59           | expression . PLUS expression
   60           | expression . MINUS expression
   61           | expression . TIMES expression
   62           | expression . DIVIDE expression
   62           | expression DIVIDE expression .  [OR, AND, EQ, NEQ, LE, LT, GT, GE, PLUS, MINUS, TIMES, DIVIDE, ';', '}', ',', ')', ']']
   63           | expression . EQ expression
   64           | expression . NEQ expression

    $default  reduce using rule 62 (expression)

    Conflict between rule 62 and token OR resolved as reduce (OR < DIVIDE).
    Conflict between rule 62 and token AND resolved as reduce (AND < DIVIDE).
    Conflict between rule 62 and token EQ resolved as reduce (EQ < DIVIDE).
    Conflict between rule 62 and token NEQ resolved as reduce (NEQ < DIVIDE).
    Conflict between rule 62 and token LE resolved as reduce (LE < DIVIDE).
    Conflict between rule 62 and token LT resolved as reduce (LT < DIVIDE).
    Conflict between rule 62 and token GT resolved as reduce (GT < DIVIDE).
    Conflict between rule 62 and token GE resolved as reduce (GE < DIVIDE).
    Conflict between rule 62 and token PLUS resolved as reduce (PLUS < DIVIDE).
    Conflict between rule 62 and token MINUS resolved as reduce (MINUS < DIVIDE).
    Conflict between rule 62 and token TIMES resolved as reduce (%left TIMES).
    Conflict between rule 62 and token DIVIDE resolved as reduce (%left DIVIDE).


State 90

   33 break_stmt: BREAK .

    $default  reduce using rule 33 (break_stmt)


State 91

   28 if_stmt: IF . '(' expression ')' '{' moon_body '}'
   29        | IF . '(' expression ')' '{' moon_body '}' ELSE '{' moon_body '}'

    '('  shift, and go to state 111


State 92

   31 return_stmt: RETURN .  [';']
   32            | RETURN . expression
   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    $default  reduce using rule 31 (return_stmt)

    left_value  go to state 39
    type        go to state 40
    expression  go to state 112


State 93

   30 while_stmt: WHILE . '(' expression ')' '{' moon_body '}'

    '('  shift, and go to state 113


State 94

   27 declare_function_stmt: type IDENTIFIER '(' ')' '{' moon_body . '}'

    '}'  shift, and go to state 114


State 95

    9 moon_body: moon_stmts .

    $default  reduce using rule 9 (moon_body)


State 96

   10 moon_stmts: . moon_stmt
   10           | moon_stmt .  ['}']
   11           | . moon_stmt moon_stmts
   11           | moon_stmt . moon_stmts
   12 moon_stmt: . declare_variable_stmt ';'
   13          | . if_stmt
   14          | . while_stmt
   15          | . expression ';'
   16          | . return_stmt ';'
   17          | . break_stmt ';'
   18 declare_variable_stmt: . type IDENTIFIER
   19                      | . type IDENTIFIER '=' expression
   28 if_stmt: . IF '(' expression ')' '{' moon_body '}'
   29        | . IF '(' expression ')' '{' moon_body '}' ELSE '{' moon_body '}'
   30 while_stmt: . WHILE '(' expression ')' '{' moon_body '}'
   31 return_stmt: . RETURN
   32            | . RETURN expression
   33 break_stmt: . BREAK
   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    BREAK       shift, and go to state 90
    FALSE       shift, and go to state 36
    IF          shift, and go to state 91
    INT         shift, and go to state 2
    RETURN      shift, and go to state 92
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    WHILE       shift, and go to state 93
    MINUS       shift, and go to state 38

    $default  reduce using rule 10 (moon_stmts)

    moon_stmts             go to state 115
    moon_stmt              go to state 96
    declare_variable_stmt  go to state 97
    if_stmt                go to state 98
    while_stmt             go to state 99
    return_stmt            go to state 100
    break_stmt             go to state 101
    left_value             go to state 39
    type                   go to state 102
    expression             go to state 103


State 97

   12 moon_stmt: declare_variable_stmt . ';'

    ';'  shift, and go to state 116


State 98

   13 moon_stmt: if_stmt .

    $default  reduce using rule 13 (moon_stmt)


State 99

   14 moon_stmt: while_stmt .

    $default  reduce using rule 14 (moon_stmt)


State 100

   16 moon_stmt: return_stmt . ';'

    ';'  shift, and go to state 117


State 101

   17 moon_stmt: break_stmt . ';'

    ';'  shift, and go to state 118


State 102

   18 declare_variable_stmt: type . IDENTIFIER
   19                      | type . IDENTIFIER '=' expression
   65 expression: type . '{' expression_list '}'

    IDENTIFIER  shift, and go to state 119
    '{'         shift, and go to state 53


State 103

   15 moon_stmt: expression . ';'
   53 expression: expression . OR expression
   54           | expression . AND expression
   55           | expression . LT expression
   56           | expression . GT expression
   57           | expression . LE expression
   58           | expression . GE expression
   59           | expression . PLUS expression
   60           | expression . MINUS expression
   61           | expression . TIMES expression
   62           | expression . DIVIDE expression
   63           | expression . EQ expression
   64           | expression . NEQ expression

    OR      shift, and go to state 54
    AND     shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LE      shift, and go to state 58
    LT      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    PLUS    shift, and go to state 62
    MINUS   shift, and go to state 63
    TIMES   shift, and go to state 64
    DIVIDE  shift, and go to state 65
    ';'     shift, and go to state 120


State 104

    8 moon_body: . %empty  ['}']
    9          | . moon_stmts
   10 moon_stmts: . moon_stmt
   11           | . moon_stmt moon_stmts
   12 moon_stmt: . declare_variable_stmt ';'
   13          | . if_stmt
   14          | . while_stmt
   15          | . expression ';'
   16          | . return_stmt ';'
   17          | . break_stmt ';'
   18 declare_variable_stmt: . type IDENTIFIER
   19                      | . type IDENTIFIER '=' expression
   26 declare_function_stmt: type IDENTIFIER '(' type_fields ')' '{' . moon_body '}'
   28 if_stmt: . IF '(' expression ')' '{' moon_body '}'
   29        | . IF '(' expression ')' '{' moon_body '}' ELSE '{' moon_body '}'
   30 while_stmt: . WHILE '(' expression ')' '{' moon_body '}'
   31 return_stmt: . RETURN
   32            | . RETURN expression
   33 break_stmt: . BREAK
   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    BREAK       shift, and go to state 90
    FALSE       shift, and go to state 36
    IF          shift, and go to state 91
    INT         shift, and go to state 2
    RETURN      shift, and go to state 92
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    WHILE       shift, and go to state 93
    MINUS       shift, and go to state 38

    $default  reduce using rule 8 (moon_body)

    moon_body              go to state 121
    moon_stmts             go to state 95
    moon_stmt              go to state 96
    declare_variable_stmt  go to state 97
    if_stmt                go to state 98
    while_stmt             go to state 99
    return_stmt            go to state 100
    break_stmt             go to state 101
    left_value             go to state 39
    type                   go to state 102
    expression             go to state 103


State 105

   25 type_fields: type_field ',' type_fields .

    $default  reduce using rule 25 (type_fields)


State 106

   21 struct_elem_list: type IDENTIFIER ';' struct_elem_list .

    $default  reduce using rule 21 (struct_elem_list)


State 107

   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'
   66 expression_list: . expression
   67                | . expression ',' expression_list
   67                | expression ',' . expression_list

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    left_value       go to state 39
    type             go to state 40
    expression       go to state 72
    expression_list  go to state 122


State 108

   49 expression: IDENTIFIER '(' expression_list ')' .

    $default  reduce using rule 49 (expression)


State 109

   36 left_value: left_value '[' expression ']' .

    $default  reduce using rule 36 (left_value)


State 110

   65 expression: type '{' expression_list '}' .

    $default  reduce using rule 65 (expression)


State 111

   28 if_stmt: IF '(' . expression ')' '{' moon_body '}'
   29        | IF '(' . expression ')' '{' moon_body '}' ELSE '{' moon_body '}'
   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    left_value  go to state 39
    type        go to state 40
    expression  go to state 123


State 112

   32 return_stmt: RETURN expression .  [';']
   53 expression: expression . OR expression
   54           | expression . AND expression
   55           | expression . LT expression
   56           | expression . GT expression
   57           | expression . LE expression
   58           | expression . GE expression
   59           | expression . PLUS expression
   60           | expression . MINUS expression
   61           | expression . TIMES expression
   62           | expression . DIVIDE expression
   63           | expression . EQ expression
   64           | expression . NEQ expression

    OR      shift, and go to state 54
    AND     shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LE      shift, and go to state 58
    LT      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    PLUS    shift, and go to state 62
    MINUS   shift, and go to state 63
    TIMES   shift, and go to state 64
    DIVIDE  shift, and go to state 65

    $default  reduce using rule 32 (return_stmt)


State 113

   30 while_stmt: WHILE '(' . expression ')' '{' moon_body '}'
   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    FALSE       shift, and go to state 36
    INT         shift, and go to state 2
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    MINUS       shift, and go to state 38

    left_value  go to state 39
    type        go to state 40
    expression  go to state 124


State 114

   27 declare_function_stmt: type IDENTIFIER '(' ')' '{' moon_body '}' .

    $default  reduce using rule 27 (declare_function_stmt)


State 115

   11 moon_stmts: moon_stmt moon_stmts .

    $default  reduce using rule 11 (moon_stmts)


State 116

   12 moon_stmt: declare_variable_stmt ';' .

    $default  reduce using rule 12 (moon_stmt)


State 117

   16 moon_stmt: return_stmt ';' .

    $default  reduce using rule 16 (moon_stmt)


State 118

   17 moon_stmt: break_stmt ';' .

    $default  reduce using rule 17 (moon_stmt)


State 119

   18 declare_variable_stmt: type IDENTIFIER .  [';']
   19                      | type IDENTIFIER . '=' expression

    '='  shift, and go to state 29

    $default  reduce using rule 18 (declare_variable_stmt)


State 120

   15 moon_stmt: expression ';' .

    $default  reduce using rule 15 (moon_stmt)


State 121

   26 declare_function_stmt: type IDENTIFIER '(' type_fields ')' '{' moon_body . '}'

    '}'  shift, and go to state 125


State 122

   67 expression_list: expression ',' expression_list .

    $default  reduce using rule 67 (expression_list)


State 123

   28 if_stmt: IF '(' expression . ')' '{' moon_body '}'
   29        | IF '(' expression . ')' '{' moon_body '}' ELSE '{' moon_body '}'
   53 expression: expression . OR expression
   54           | expression . AND expression
   55           | expression . LT expression
   56           | expression . GT expression
   57           | expression . LE expression
   58           | expression . GE expression
   59           | expression . PLUS expression
   60           | expression . MINUS expression
   61           | expression . TIMES expression
   62           | expression . DIVIDE expression
   63           | expression . EQ expression
   64           | expression . NEQ expression

    OR      shift, and go to state 54
    AND     shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LE      shift, and go to state 58
    LT      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    PLUS    shift, and go to state 62
    MINUS   shift, and go to state 63
    TIMES   shift, and go to state 64
    DIVIDE  shift, and go to state 65
    ')'     shift, and go to state 126


State 124

   30 while_stmt: WHILE '(' expression . ')' '{' moon_body '}'
   53 expression: expression . OR expression
   54           | expression . AND expression
   55           | expression . LT expression
   56           | expression . GT expression
   57           | expression . LE expression
   58           | expression . GE expression
   59           | expression . PLUS expression
   60           | expression . MINUS expression
   61           | expression . TIMES expression
   62           | expression . DIVIDE expression
   63           | expression . EQ expression
   64           | expression . NEQ expression

    OR      shift, and go to state 54
    AND     shift, and go to state 55
    EQ      shift, and go to state 56
    NEQ     shift, and go to state 57
    LE      shift, and go to state 58
    LT      shift, and go to state 59
    GT      shift, and go to state 60
    GE      shift, and go to state 61
    PLUS    shift, and go to state 62
    MINUS   shift, and go to state 63
    TIMES   shift, and go to state 64
    DIVIDE  shift, and go to state 65
    ')'     shift, and go to state 127


State 125

   26 declare_function_stmt: type IDENTIFIER '(' type_fields ')' '{' moon_body '}' .

    $default  reduce using rule 26 (declare_function_stmt)


State 126

   28 if_stmt: IF '(' expression ')' . '{' moon_body '}'
   29        | IF '(' expression ')' . '{' moon_body '}' ELSE '{' moon_body '}'

    '{'  shift, and go to state 128


State 127

   30 while_stmt: WHILE '(' expression ')' . '{' moon_body '}'

    '{'  shift, and go to state 129


State 128

    8 moon_body: . %empty  ['}']
    9          | . moon_stmts
   10 moon_stmts: . moon_stmt
   11           | . moon_stmt moon_stmts
   12 moon_stmt: . declare_variable_stmt ';'
   13          | . if_stmt
   14          | . while_stmt
   15          | . expression ';'
   16          | . return_stmt ';'
   17          | . break_stmt ';'
   18 declare_variable_stmt: . type IDENTIFIER
   19                      | . type IDENTIFIER '=' expression
   28 if_stmt: . IF '(' expression ')' '{' moon_body '}'
   28        | IF '(' expression ')' '{' . moon_body '}'
   29        | . IF '(' expression ')' '{' moon_body '}' ELSE '{' moon_body '}'
   29        | IF '(' expression ')' '{' . moon_body '}' ELSE '{' moon_body '}'
   30 while_stmt: . WHILE '(' expression ')' '{' moon_body '}'
   31 return_stmt: . RETURN
   32            | . RETURN expression
   33 break_stmt: . BREAK
   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    BREAK       shift, and go to state 90
    FALSE       shift, and go to state 36
    IF          shift, and go to state 91
    INT         shift, and go to state 2
    RETURN      shift, and go to state 92
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    WHILE       shift, and go to state 93
    MINUS       shift, and go to state 38

    $default  reduce using rule 8 (moon_body)

    moon_body              go to state 130
    moon_stmts             go to state 95
    moon_stmt              go to state 96
    declare_variable_stmt  go to state 97
    if_stmt                go to state 98
    while_stmt             go to state 99
    return_stmt            go to state 100
    break_stmt             go to state 101
    left_value             go to state 39
    type                   go to state 102
    expression             go to state 103


State 129

    8 moon_body: . %empty  ['}']
    9          | . moon_stmts
   10 moon_stmts: . moon_stmt
   11           | . moon_stmt moon_stmts
   12 moon_stmt: . declare_variable_stmt ';'
   13          | . if_stmt
   14          | . while_stmt
   15          | . expression ';'
   16          | . return_stmt ';'
   17          | . break_stmt ';'
   18 declare_variable_stmt: . type IDENTIFIER
   19                      | . type IDENTIFIER '=' expression
   28 if_stmt: . IF '(' expression ')' '{' moon_body '}'
   29        | . IF '(' expression ')' '{' moon_body '}' ELSE '{' moon_body '}'
   30 while_stmt: . WHILE '(' expression ')' '{' moon_body '}'
   30           | WHILE '(' expression ')' '{' . moon_body '}'
   31 return_stmt: . RETURN
   32            | . RETURN expression
   33 break_stmt: . BREAK
   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    BREAK       shift, and go to state 90
    FALSE       shift, and go to state 36
    IF          shift, and go to state 91
    INT         shift, and go to state 2
    RETURN      shift, and go to state 92
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    WHILE       shift, and go to state 93
    MINUS       shift, and go to state 38

    $default  reduce using rule 8 (moon_body)

    moon_body              go to state 131
    moon_stmts             go to state 95
    moon_stmt              go to state 96
    declare_variable_stmt  go to state 97
    if_stmt                go to state 98
    while_stmt             go to state 99
    return_stmt            go to state 100
    break_stmt             go to state 101
    left_value             go to state 39
    type                   go to state 102
    expression             go to state 103


State 130

   28 if_stmt: IF '(' expression ')' '{' moon_body . '}'
   29        | IF '(' expression ')' '{' moon_body . '}' ELSE '{' moon_body '}'

    '}'  shift, and go to state 132


State 131

   30 while_stmt: WHILE '(' expression ')' '{' moon_body . '}'

    '}'  shift, and go to state 133


State 132

   28 if_stmt: IF '(' expression ')' '{' moon_body '}' .  [IDENTIFIER, INTNUM, STRING, BREAK, FALSE, IF, INT, RETURN, STRING_, TRUE, VOID, WHILE, MINUS, '}']
   29        | IF '(' expression ')' '{' moon_body '}' . ELSE '{' moon_body '}'

    ELSE  shift, and go to state 134

    $default  reduce using rule 28 (if_stmt)


State 133

   30 while_stmt: WHILE '(' expression ')' '{' moon_body '}' .

    $default  reduce using rule 30 (while_stmt)


State 134

   29 if_stmt: IF '(' expression ')' '{' moon_body '}' ELSE . '{' moon_body '}'

    '{'  shift, and go to state 135


State 135

    8 moon_body: . %empty  ['}']
    9          | . moon_stmts
   10 moon_stmts: . moon_stmt
   11           | . moon_stmt moon_stmts
   12 moon_stmt: . declare_variable_stmt ';'
   13          | . if_stmt
   14          | . while_stmt
   15          | . expression ';'
   16          | . return_stmt ';'
   17          | . break_stmt ';'
   18 declare_variable_stmt: . type IDENTIFIER
   19                      | . type IDENTIFIER '=' expression
   28 if_stmt: . IF '(' expression ')' '{' moon_body '}'
   29        | . IF '(' expression ')' '{' moon_body '}' ELSE '{' moon_body '}'
   29        | IF '(' expression ')' '{' moon_body '}' ELSE '{' . moon_body '}'
   30 while_stmt: . WHILE '(' expression ')' '{' moon_body '}'
   31 return_stmt: . RETURN
   32            | . RETURN expression
   33 break_stmt: . BREAK
   34 left_value: . IDENTIFIER
   35           | . left_value '.' IDENTIFIER
   36           | . left_value '[' expression ']'
   38 type: . IDENTIFIER
   39     | . INT
   40     | . STRING_
   41     | . VOID
   42     | . IDENTIFIER '[' ']'
   43     | . INT '[' ']'
   44 expression: . INTNUM
   45           | . TRUE
   46           | . FALSE
   47           | . STRING
   48           | . left_value
   49           | . IDENTIFIER '(' expression_list ')'
   50           | . IDENTIFIER '(' ')'
   51           | . left_value '=' expression
   52           | . MINUS expression
   53           | . expression OR expression
   54           | . expression AND expression
   55           | . expression LT expression
   56           | . expression GT expression
   57           | . expression LE expression
   58           | . expression GE expression
   59           | . expression PLUS expression
   60           | . expression MINUS expression
   61           | . expression TIMES expression
   62           | . expression DIVIDE expression
   63           | . expression EQ expression
   64           | . expression NEQ expression
   65           | . type '{' expression_list '}'

    IDENTIFIER  shift, and go to state 33
    INTNUM      shift, and go to state 34
    STRING      shift, and go to state 35
    BREAK       shift, and go to state 90
    FALSE       shift, and go to state 36
    IF          shift, and go to state 91
    INT         shift, and go to state 2
    RETURN      shift, and go to state 92
    STRING_     shift, and go to state 3
    TRUE        shift, and go to state 37
    VOID        shift, and go to state 6
    WHILE       shift, and go to state 93
    MINUS       shift, and go to state 38

    $default  reduce using rule 8 (moon_body)

    moon_body              go to state 136
    moon_stmts             go to state 95
    moon_stmt              go to state 96
    declare_variable_stmt  go to state 97
    if_stmt                go to state 98
    while_stmt             go to state 99
    return_stmt            go to state 100
    break_stmt             go to state 101
    left_value             go to state 39
    type                   go to state 102
    expression             go to state 103


State 136

   29 if_stmt: IF '(' expression ')' '{' moon_body '}' ELSE '{' moon_body . '}'

    '}'  shift, and go to state 137


State 137

   29 if_stmt: IF '(' expression ')' '{' moon_body '}' ELSE '{' moon_body '}' .

    $default  reduce using rule 29 (if_stmt)
